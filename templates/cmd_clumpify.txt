## Template for cmd.txt file for Nova-Seq paired end with clumplify.

#e @EMAIL -b
#c @CLUSTER
@ANALYSIS

ORG=/tomato/dev/data/@DIR/@ASSEMBLY
CHROM=$ORG/chrom.sizes
DB=$ORG/release@VERSION
INDEX=$DB/star@LENGTH
GTF=$DB/@SPECIES.@ASSEMBLY.@VERSION.gtf
REFFLAT=$DB/@SPECIES.@ASSEMBLY.@VERSION.refflat
RIBOINT=$DB/@SPECIES.@ASSEMBLY.@VERSION.rRNA.interval
RSEM_INDEX=$DB/rsem/RSEM

# Paths
APP=/tomato/dev/app
FASTQC=$APP/FastQC/0.11.5/fastqc
STAR=$APP/STAR/@STAR/STAR
FEATCOUNT=$APP/Subread/1.6.3/bin/featureCounts
SAMTOOLS=$APP/samtools/1.10/samtools
BIGWIG=$APP/UCSC/bedGraphToBigWig
PICARD=$APP/picard/2.9.0/picard.jar
RSEM=$APP/rsem/1.3.1/rsem-calculate-expression
CUTADAPT=$APP/modulesoftware/cutadapt
CLUMPIFY=$APP/BBmap/v38.34/clumpify.sh
FASTQSCREEN=$APP/fastq_screen/v0.14.0/fastq_screen

# Fastq files
R1=`echo *R1_001.fastq.gz`
R2=`echo *R2_001.fastq.gz`

echo $R1
echo $R2

# GET sample prefix
OUT=`echo ${R1%%_*}`

# If 2 or more lanes
if [[ $R1 =~ " " ]]
then
   echo "Concatentating Fastqs into R1.fq.gz and R2.fq.gz files"
   cat $R1 > R1.fq.gz
   cat $R2 > R2.fq.gz
else
   ln $R1 R1.fq.gz
   ln $R2 R2.fq.gz
fi

$CLUMPIFY in1=R1.fq.gz in2=R2.fq.gz out1=$OUT.clump1.fq.gz \
   out2=$OUT.clump2.fq.gz dupedist=12000 dedupe=t optical=t

# CUTADAPT  v 2.8
$CUTADAPT -j $NCPU -O 6 -m 20 -a @ADAPT1 \
   -A @ADAPT2 \
   -o $OUT.1.fq -p $OUT.2.fq $OUT.clump1.fq.gz $OUT.clump2.fq.gz

rm R1.fq.gz R2.fq.gz
rm $OUT.clump1.fq.gz $OUT.clump2.fq.gz

# %rRNA using fastq screen
$FASTQSCREEN --conf @SCREEN_CONF \
 --subset 1000000 $OUT.1.fq

# FASTQ
$FASTQC -T $NCPU -f fastq $OUT.1.fq
$FASTQC -T $NCPU -f fastq $OUT.2.fq

# STAR
MEM=`echo "$SMGB" | awk '{print $1 * 1073741824}'`
echo "limitBAMsortRAM=$MEM"

$STAR --genomeDir $INDEX \
--readFilesIn $OUT.1.fq $OUT.2.fq \
--runThreadN $NCPU \
--twopassMode Basic \
--outSAMtype BAM SortedByCoordinate \
--limitBAMsortRAM $MEM \
--outBAMsortingBinsN 100 \
--quantMode TranscriptomeSAM \
--outWigType bedGraph \
--outWigStrand Unstranded

# rename for multiqc ID parsing
mv Aligned.sortedByCoord.out.bam $OUT.bam
mv Log.final.out $OUT.Log.final.out

# Samtools
$SAMTOOLS index $OUT.bam
$SAMTOOLS idxstats $OUT.bam | sort -V > $OUT.idxstats

# RSEM
$RSEM --paired-end -p $NCPU --alignments --strandedness reverse --no-bam-output \
   Aligned.toTranscriptome.out.bam $RSEM_INDEX $OUT

# featureCounts -s 2
$FEATCOUNT -T $NCPU -p -s 2 --largestOverlap -a $GTF -o $OUT.counts $OUT.bam
$FEATCOUNT -T $NCPU -p -s 2 --largestOverlap -a $GTF -o $OUT.biotypes -g gene_biotype $OUT.bam

# RnaSeq metrics
/usr/bin/java -Xmx20G -jar $PICARD CollectRnaSeqMetrics  REF_FLAT=$REFFLAT \
STRAND=SECOND_READ_TRANSCRIPTION_STRAND RIBOSOMAL_INTERVALS=$RIBOINT \
I=$OUT.bam  O=$OUT.rna_metrics

# bedGraphToBigWig
$BIGWIG Signal.Unique.str1.out.bg $CHROM $OUT.unique.bw
$BIGWIG Signal.UniqueMultiple.str1.out.bg $CHROM $OUT.multiple.bw

# keep for Salmon?
rm Aligned.toTranscriptome.out.bam
rm $OUT.1.fq $OUT.2.fq
rm Signal.Unique.str1.out.bg
rm Signal.UniqueMultiple.str1.out.bg
## STAR twopassMode
rm -rf _STARgenome
rm -rf _STARpass1
